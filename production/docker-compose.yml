version: "3.8"

services:
  mysql:
    container_name: db12w
    image: mysql:8.0.33
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: reactlibrarydatabase
        # MYSQL_PORT: 3306
    networks:
      - shared-network
    volumes:
      - mysqlvolume:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d

  # mysql-workbench:
  #   container_name: mysqlwbcontainer
  #   image: linuxserver/mysql-workbench:8.0.33
  #   restart: always
  #   environment:
  #     CUSTOM_USER: abc
  #     PASSWORD: root
  #     CUSTOM_PORT: 5050
  #   ports:
  #     - 5050:5050
  #   networks:
  #     - shared-network
  #   depends_on:
  #     - mysql
  #   # volumes:
  #   #   - mysql-workbench-volume:/var/lib/mysql
  
  nginx:
    image: nginx
    # container_name: nginx_container
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./certs/devopsexample-key.pem:/etc/nginx/certs/devopsbyexample-key.pem
      - ./certs/devopsexample.pem:/etc/nginx/certs/devopsbyexample.pem
    ports:
      - 80:80
      - 443:443
    networks:
      - shared-network
    depends_on:
      - server
      - client

  server:
    container_name: bookwise_server
    restart: unless-stopped
    image: 058514224140.dkr.ecr.us-east-2.amazonaws.com/bookwise3:server-image-4
    # build:
    #   context: Backend
    #   dockerfile: Dockerfile
    environment:
      # - spring_datasource_driver-class-name=
      - spring_datasource_url=jdbc:mysql://db12w:3306/reactlibrarydatabase
      - spring_datasource_username=root
      - spring_datasource_password=root
    ports:  #outside:inside(container) #8443
      - 8080:8080
    networks:
      - shared-network
    depends_on:
      - mysql

  client:
    container_name: bookwise_client
    restart: unless-stopped
    image: 058514224140.dkr.ecr.us-east-2.amazonaws.com/bookwise3:client-image-4
    # build:
    #   context: Frontend
    #   dockerfile: Dockerfile
    # ports:  #outside:inside(container)
    #   - 3000:3000
    # environment:
    #   - REACT_APP_API=https://ec2-18-189-18-248.us-east-2.compute.amazonaws.com/api/api
    networks:
      - shared-network
    depends_on:
      - server
volumes:
  mysqlvolume:
  # mysql-workbench-volume:
networks:
  shared-network:
    driver: bridge